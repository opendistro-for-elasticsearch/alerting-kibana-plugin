// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MonitorIndex renders 1`] = `
<Formik
  enableReinitialize={false}
  initialValues={
    Object {
      "aggregationType": "count",
      "bucketUnitOfTime": "h",
      "bucketValue": 1,
      "cronExpression": "0 */1 * * *",
      "daily": 0,
      "disabled": false,
      "fieldName": Array [],
      "frequency": "interval",
      "groupedOverFieldName": "bytes",
      "groupedOverTop": 5,
      "index": Array [],
      "monthly": Object {
        "day": 1,
        "type": "day",
      },
      "name": "",
      "overDocuments": "all documents",
      "period": Object {
        "interval": 1,
        "unit": "MINUTES",
      },
      "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
      "searchType": "graph",
      "timeField": "",
      "timezone": Array [],
      "weekly": Object {
        "fri": false,
        "mon": false,
        "sat": false,
        "sun": false,
        "thur": false,
        "tue": false,
        "wed": false,
      },
      "where": Object {
        "fieldName": Array [],
        "fieldRangeEnd": 0,
        "fieldRangeStart": 0,
        "fieldValue": 0,
        "operator": "is",
      },
    }
  }
  isInitialValid={false}
  render={[Function]}
  validateOnBlur={true}
  validateOnChange={true}
>
  <MonitorIndex
    httpClient={[MockFunction]}
  >
    <FormikComboBox
      fieldProps={
        Object {
          "validate": [Function],
        }
      }
      formRow={true}
      inputProps={
        Object {
          "async": true,
          "data-test-subj": "indicesComboBox",
          "isClearable": true,
          "isLoading": true,
          "onBlur": [Function],
          "onChange": [Function],
          "onCreateOption": [Function],
          "onSearchChange": [Function],
          "options": Array [
            Object {
              "label": "Aliases",
              "options": Array [],
            },
            Object {
              "label": "Indices",
              "options": Array [],
            },
          ],
          "placeholder": "Select indices",
          "renderOption": [Function],
        }
      }
      name="index"
      rowProps={
        Object {
          "error": [Function],
          "helpText": "You can use a * as a wildcard in your index pattern",
          "isInvalid": [Function],
          "label": "Index",
          "style": Object {
            "paddingLeft": "10px",
          },
        }
      }
    >
      <FormikInputWrapper
        fieldProps={
          Object {
            "validate": [Function],
          }
        }
        name="index"
        render={[Function]}
      >
        <C
          name="index"
          render={[Function]}
          validate={[Function]}
        >
          <FieldInner
            formik={
              Object {
                "dirty": false,
                "errors": Object {},
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialValues": Object {
                  "aggregationType": "count",
                  "bucketUnitOfTime": "h",
                  "bucketValue": 1,
                  "cronExpression": "0 */1 * * *",
                  "daily": 0,
                  "disabled": false,
                  "fieldName": Array [],
                  "frequency": "interval",
                  "groupedOverFieldName": "bytes",
                  "groupedOverTop": 5,
                  "index": Array [],
                  "monthly": Object {
                    "day": 1,
                    "type": "day",
                  },
                  "name": "",
                  "overDocuments": "all documents",
                  "period": Object {
                    "interval": 1,
                    "unit": "MINUTES",
                  },
                  "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                  "searchType": "graph",
                  "timeField": "",
                  "timezone": Array [],
                  "weekly": Object {
                    "fri": false,
                    "mon": false,
                    "sat": false,
                    "sun": false,
                    "thur": false,
                    "tue": false,
                    "wed": false,
                  },
                  "where": Object {
                    "fieldName": Array [],
                    "fieldRangeEnd": 0,
                    "fieldRangeStart": 0,
                    "fieldValue": 0,
                    "operator": "is",
                  },
                },
                "isSubmitting": false,
                "isValid": false,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setError": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validate": undefined,
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validationSchema": undefined,
                "values": Object {
                  "aggregationType": "count",
                  "bucketUnitOfTime": "h",
                  "bucketValue": 1,
                  "cronExpression": "0 */1 * * *",
                  "daily": 0,
                  "disabled": false,
                  "fieldName": Array [],
                  "frequency": "interval",
                  "groupedOverFieldName": "bytes",
                  "groupedOverTop": 5,
                  "index": Array [],
                  "monthly": Object {
                    "day": 1,
                    "type": "day",
                  },
                  "name": "",
                  "overDocuments": "all documents",
                  "period": Object {
                    "interval": 1,
                    "unit": "MINUTES",
                  },
                  "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                  "searchType": "graph",
                  "timeField": "",
                  "timezone": Array [],
                  "weekly": Object {
                    "fri": false,
                    "mon": false,
                    "sat": false,
                    "sun": false,
                    "thur": false,
                    "tue": false,
                    "wed": false,
                  },
                  "where": Object {
                    "fieldName": Array [],
                    "fieldRangeEnd": 0,
                    "fieldRangeStart": 0,
                    "fieldValue": 0,
                    "operator": "is",
                  },
                },
              }
            }
            name="index"
            render={[Function]}
            validate={[Function]}
          >
            <FormikFormRow
              form={
                Object {
                  "dirty": false,
                  "errors": Object {},
                  "handleBlur": [Function],
                  "handleChange": [Function],
                  "handleReset": [Function],
                  "handleSubmit": [Function],
                  "initialValues": Object {
                    "aggregationType": "count",
                    "bucketUnitOfTime": "h",
                    "bucketValue": 1,
                    "cronExpression": "0 */1 * * *",
                    "daily": 0,
                    "disabled": false,
                    "fieldName": Array [],
                    "frequency": "interval",
                    "groupedOverFieldName": "bytes",
                    "groupedOverTop": 5,
                    "index": Array [],
                    "monthly": Object {
                      "day": 1,
                      "type": "day",
                    },
                    "name": "",
                    "overDocuments": "all documents",
                    "period": Object {
                      "interval": 1,
                      "unit": "MINUTES",
                    },
                    "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                    "searchType": "graph",
                    "timeField": "",
                    "timezone": Array [],
                    "weekly": Object {
                      "fri": false,
                      "mon": false,
                      "sat": false,
                      "sun": false,
                      "thur": false,
                      "tue": false,
                      "wed": false,
                    },
                    "where": Object {
                      "fieldName": Array [],
                      "fieldRangeEnd": 0,
                      "fieldRangeStart": 0,
                      "fieldValue": 0,
                      "operator": "is",
                    },
                  },
                  "isSubmitting": false,
                  "isValid": false,
                  "isValidating": false,
                  "registerField": [Function],
                  "resetForm": [Function],
                  "setError": [Function],
                  "setErrors": [Function],
                  "setFieldError": [Function],
                  "setFieldTouched": [Function],
                  "setFieldValue": [Function],
                  "setFormikState": [Function],
                  "setStatus": [Function],
                  "setSubmitting": [Function],
                  "setTouched": [Function],
                  "setValues": [Function],
                  "submitCount": 0,
                  "submitForm": [Function],
                  "touched": Object {},
                  "unregisterField": [Function],
                  "validateField": [Function],
                  "validateForm": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "values": Object {
                    "aggregationType": "count",
                    "bucketUnitOfTime": "h",
                    "bucketValue": 1,
                    "cronExpression": "0 */1 * * *",
                    "daily": 0,
                    "disabled": false,
                    "fieldName": Array [],
                    "frequency": "interval",
                    "groupedOverFieldName": "bytes",
                    "groupedOverTop": 5,
                    "index": Array [],
                    "monthly": Object {
                      "day": 1,
                      "type": "day",
                    },
                    "name": "",
                    "overDocuments": "all documents",
                    "period": Object {
                      "interval": 1,
                      "unit": "MINUTES",
                    },
                    "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                    "searchType": "graph",
                    "timeField": "",
                    "timezone": Array [],
                    "weekly": Object {
                      "fri": false,
                      "mon": false,
                      "sat": false,
                      "sun": false,
                      "thur": false,
                      "tue": false,
                      "wed": false,
                    },
                    "where": Object {
                      "fieldName": Array [],
                      "fieldRangeEnd": 0,
                      "fieldRangeStart": 0,
                      "fieldValue": 0,
                      "operator": "is",
                    },
                  },
                }
              }
              name="index"
              rowProps={
                Object {
                  "error": [Function],
                  "helpText": "You can use a * as a wildcard in your index pattern",
                  "isInvalid": [Function],
                  "label": "Index",
                  "style": Object {
                    "paddingLeft": "10px",
                  },
                }
              }
            >
              <EuiFormRow
                describedByIds={Array []}
                fullWidth={false}
                hasEmptyLabelSpace={false}
                helpText="You can use a * as a wildcard in your index pattern"
                id="index"
                isInvalid={false}
                label="Index"
                labelType="label"
                style={
                  Object {
                    "paddingLeft": "10px",
                  }
                }
              >
                <div
                  className="euiFormRow"
                  id="index-row"
                  style={
                    Object {
                      "paddingLeft": "10px",
                    }
                  }
                >
                  <div>
                    <EuiFormLabel
                      aria-invalid={false}
                      htmlFor="index"
                      isFocused={false}
                      isInvalid={false}
                      type="label"
                    >
                      <label
                        aria-invalid={false}
                        className="euiFormLabel"
                        htmlFor="index"
                      >
                        Index
                      </label>
                    </EuiFormLabel>
                  </div>
                  <ComboBox
                    aria-describedby="index-help"
                    field={
                      Object {
                        "name": "index",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "value": Array [],
                      }
                    }
                    form={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialValues": Object {
                          "aggregationType": "count",
                          "bucketUnitOfTime": "h",
                          "bucketValue": 1,
                          "cronExpression": "0 */1 * * *",
                          "daily": 0,
                          "disabled": false,
                          "fieldName": Array [],
                          "frequency": "interval",
                          "groupedOverFieldName": "bytes",
                          "groupedOverTop": 5,
                          "index": Array [],
                          "monthly": Object {
                            "day": 1,
                            "type": "day",
                          },
                          "name": "",
                          "overDocuments": "all documents",
                          "period": Object {
                            "interval": 1,
                            "unit": "MINUTES",
                          },
                          "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                          "searchType": "graph",
                          "timeField": "",
                          "timezone": Array [],
                          "weekly": Object {
                            "fri": false,
                            "mon": false,
                            "sat": false,
                            "sun": false,
                            "thur": false,
                            "tue": false,
                            "wed": false,
                          },
                          "where": Object {
                            "fieldName": Array [],
                            "fieldRangeEnd": 0,
                            "fieldRangeStart": 0,
                            "fieldValue": 0,
                            "operator": "is",
                          },
                        },
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setError": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "values": Object {
                          "aggregationType": "count",
                          "bucketUnitOfTime": "h",
                          "bucketValue": 1,
                          "cronExpression": "0 */1 * * *",
                          "daily": 0,
                          "disabled": false,
                          "fieldName": Array [],
                          "frequency": "interval",
                          "groupedOverFieldName": "bytes",
                          "groupedOverTop": 5,
                          "index": Array [],
                          "monthly": Object {
                            "day": 1,
                            "type": "day",
                          },
                          "name": "",
                          "overDocuments": "all documents",
                          "period": Object {
                            "interval": 1,
                            "unit": "MINUTES",
                          },
                          "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                          "searchType": "graph",
                          "timeField": "",
                          "timezone": Array [],
                          "weekly": Object {
                            "fri": false,
                            "mon": false,
                            "sat": false,
                            "sun": false,
                            "thur": false,
                            "tue": false,
                            "wed": false,
                          },
                          "where": Object {
                            "fieldName": Array [],
                            "fieldRangeEnd": 0,
                            "fieldRangeStart": 0,
                            "fieldValue": 0,
                            "operator": "is",
                          },
                        },
                      }
                    }
                    id="index"
                    inputProps={
                      Object {
                        "async": true,
                        "data-test-subj": "indicesComboBox",
                        "isClearable": true,
                        "isLoading": true,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onCreateOption": [Function],
                        "onSearchChange": [Function],
                        "options": Array [
                          Object {
                            "label": "Aliases",
                            "options": Array [],
                          },
                          Object {
                            "label": "Indices",
                            "options": Array [],
                          },
                        ],
                        "placeholder": "Select indices",
                        "renderOption": [Function],
                      }
                    }
                    name="index"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <EuiComboBox
                      async={true}
                      compressed={false}
                      data-test-subj="indicesComboBox"
                      fullWidth={false}
                      id="index"
                      isClearable={true}
                      isLoading={true}
                      name="index"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onCreateOption={[Function]}
                      onSearchChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Aliases",
                            "options": Array [],
                          },
                          Object {
                            "label": "Indices",
                            "options": Array [],
                          },
                        ]
                      }
                      placeholder="Select indices"
                      renderOption={[Function]}
                      selectedOptions={Array []}
                      singleSelection={false}
                    >
                      <div
                        aria-expanded={false}
                        aria-haspopup="listbox"
                        className="euiComboBox"
                        data-test-subj="indicesComboBox"
                        name="index"
                        onKeyDown={[Function]}
                        role="combobox"
                      >
                        <EuiComboBoxInput
                          autoSizeInputRef={[Function]}
                          compressed={false}
                          focusedOptionId={null}
                          fullWidth={false}
                          hasSelectedOptions={false}
                          id="index"
                          inputRef={[Function]}
                          isListOpen={false}
                          noIcon={false}
                          onChange={[Function]}
                          onClear={[Function]}
                          onClick={[Function]}
                          onCloseListClick={[Function]}
                          onFocus={[Function]}
                          onOpenListClick={[Function]}
                          onRemoveOption={[Function]}
                          placeholder="Select indices"
                          rootId={[Function]}
                          searchValue=""
                          selectedOptions={Array []}
                          singleSelection={false}
                          toggleButtonRef={[Function]}
                          updatePosition={[Function]}
                          value=""
                        >
                          <EuiFormControlLayout
                            compressed={false}
                            fullWidth={false}
                            icon={
                              Object {
                                "aria-label": "Open list of options",
                                "data-test-subj": "comboBoxToggleListButton",
                                "disabled": undefined,
                                "onClick": [Function],
                                "ref": [Function],
                                "side": "right",
                                "type": "arrowDown",
                              }
                            }
                            isLoading={false}
                          >
                            <div
                              className="euiFormControlLayout"
                            >
                              <div
                                className="euiFormControlLayout__childrenWrapper"
                              >
                                <div
                                  className="euiComboBox__inputWrap euiComboBox__inputWrap-isClearable"
                                  data-test-subj="comboBoxInput"
                                  onClick={[Function]}
                                  tabIndex="-1"
                                >
                                  <p
                                    className="euiComboBoxPlaceholder"
                                  >
                                    Select indices
                                  </p>
                                  <AutosizeInput
                                    aria-activedescendant={null}
                                    aria-controls={null}
                                    className="euiComboBox__input"
                                    data-test-subj="comboBoxSearchInput"
                                    id="index"
                                    injectStyles={true}
                                    inputRef={[Function]}
                                    minWidth={1}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    role="textbox"
                                    style={
                                      Object {
                                        "fontSize": 14,
                                      }
                                    }
                                    value=""
                                  >
                                    <div
                                      className="euiComboBox__input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                          "fontSize": 14,
                                        }
                                      }
                                    >
                                      <input
                                        aria-activedescendant={null}
                                        aria-controls={null}
                                        data-test-subj="comboBoxSearchInput"
                                        id="index"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "2px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </div>
                                <EuiFormControlLayoutIcons
                                  icon={
                                    Object {
                                      "aria-label": "Open list of options",
                                      "data-test-subj": "comboBoxToggleListButton",
                                      "disabled": undefined,
                                      "onClick": [Function],
                                      "ref": [Function],
                                      "side": "right",
                                      "type": "arrowDown",
                                    }
                                  }
                                  isLoading={false}
                                >
                                  <div
                                    className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                  >
                                    <EuiFormControlLayoutCustomIcon
                                      aria-label="Open list of options"
                                      data-test-subj="comboBoxToggleListButton"
                                      iconRef={[Function]}
                                      onClick={[Function]}
                                      type="arrowDown"
                                    >
                                      <button
                                        aria-label="Open list of options"
                                        className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                        data-test-subj="comboBoxToggleListButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiIcon
                                          aria-hidden="true"
                                          className="euiFormControlLayoutCustomIcon__icon"
                                          type="arrowDown"
                                        >
                                          <arrowDown
                                            aria-hidden="true"
                                            className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                            focusable="false"
                                            height="16"
                                            style={null}
                                            viewBox="0 0 16 16"
                                            width="16"
                                            xmlns="http://www.w3.org/2000/svg"
                                            xmlnsXlink="http://www.w3.org/1999/xlink"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                              focusable="false"
                                              height="16"
                                              style={null}
                                              viewBox="0 0 16 16"
                                              width="16"
                                              xmlns="http://www.w3.org/2000/svg"
                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                            >
                                              <defs>
                                                <path
                                                  d="M13.069 5.157L8.384 9.768a.546.546 0 0 1-.768 0L2.93 5.158a.552.552 0 0 0-.771 0 .53.53 0 0 0 0 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 0 0 0-.76.552.552 0 0 0-.771 0z"
                                                  id="arrow_down-a"
                                                />
                                              </defs>
                                              <use
                                                fillRule="nonzero"
                                                xlinkHref="#arrow_down-a"
                                              />
                                            </svg>
                                          </arrowDown>
                                        </EuiIcon>
                                      </button>
                                    </EuiFormControlLayoutCustomIcon>
                                  </div>
                                </EuiFormControlLayoutIcons>
                              </div>
                            </div>
                          </EuiFormControlLayout>
                        </EuiComboBoxInput>
                      </div>
                    </EuiComboBox>
                  </ComboBox>
                  <EuiFormHelpText
                    className="euiFormRow__text"
                    id="index-help"
                  >
                    <div
                      className="euiFormHelpText euiFormRow__text"
                      id="index-help"
                    >
                      You can use a * as a wildcard in your index pattern
                    </div>
                  </EuiFormHelpText>
                </div>
              </EuiFormRow>
            </FormikFormRow>
          </FieldInner>
        </C>
      </FormikInputWrapper>
    </FormikComboBox>
  </MonitorIndex>
</Formik>
`;
